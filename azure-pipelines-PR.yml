# CI and PR triggers
trigger:
  branches:
    include:
    - main
    - dev16.1
    - feature/*
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - .vscode/*
    - .devcontainer/*
    - tests/scripts/
    - attributions.md
    - CODE_OF_CONDUCT.md
    - DEVGUIDE.md
    - INTERNAL.md
    - Language-Version-History.md
    - License.txt
    - README.md
    - release-notes.md
    - TESTGUIDE.md

pr:
  branches:
    include:
    - main
    - dev16.1
    - feature/*
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - attributions.md
    - CODE_OF_CONDUCT.md
    - DEVGUIDE.md
    - INTERNAL.md
    - Language-Version-History.md
    - License.txt
    - README.md
    - release-notes.md
    - TESTGUIDE.md

variables:
  - name: _TeamName
    value: FSharp
  - name: _BuildConfig
    value: Release
  - name: _PublishUsingPipelines
    value: true
  - name: VisualStudioDropName
    value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
  - name: Codeql.Enabled
    value: true
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - group: DotNet-FSharp-SDLValidation-Params
  - ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
    - name: RunningAsPullRequest
      value: true
  # Pick up pool provider name behavior from shared yaml template
  - template: /eng/common/templates/variables/pool-providers.yml

# Variables defined in yml cannot be overridden at queue time; instead overridable variables must be defined in the web UI.
# Commenting out until something like this is supported: https://github.com/Microsoft/azure-pipelines-yaml/pull/129
#variables:
#- name: SkipTests
#  defaultValue: false

stages:
- stage: build
  displayName: Build
  jobs:

  #-------------------------------------------------------------------------------------------------------------------#
  #                            PR builds without logs publishing                                                      #
  #-------------------------------------------------------------------------------------------------------------------#


  #-------------------------------------------------------------------------------------------------------------------#
  #                                                    PR builds                                                      #
  #-------------------------------------------------------------------------------------------------------------------#
  - ${{ if eq(variables['System.TeamProject'], 'public') }}:
    - template: /eng/common/templates/jobs/jobs.yml
      parameters:
        enableMicrobuild: true
        enablePublishBuildArtifacts: true
        enablePublishTestResults: false
        enablePublishBuildAssets: true
        enablePublishUsingPipelines: $(_PublishUsingPipelines)
        enableSourceBuild: true
        enableTelemetry: true
        helixRepo: dotnet/fsharp
        jobs:


        # Plain FCS build Windows
        - job: TomasTestingWithTests
          strategy:
            parallel: 8
          pool:
            name: $(DncEngPublicBuildPool)
            demands: ImageOverride -equals $(WindowsMachineQueueName)
          variables:
          - name: _BuildConfig
            value: Release√ü
          steps:
          - checkout: self
            clean: true
          - script: dotnet --list-sdks
            displayName: Report dotnet SDK versions
          - task: UseDotNet@2
            displayName: install SDK
            inputs:
              packageType: sdk
              useGlobalJson: true
              includePreviewVersions: true
              workingDirectory: $(Build.SourcesDirectory)
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - script: .\Build.cmd -pack -c $(_BuildConfig)
            env:
              NativeToolsOnMachine: true
            displayName: Bootstrapped compiler build
          - task: VSTest@2
            displayName: Run tests
            inputs:
              testSelector: testAssemblies
              searchFolder: $(Build.SourcesDirectory)
              testAssemblyVer2: |
                artifacts\bin\FSharpSuite.Tests\Release\net472\FSharpSuite.Tests.dll
                !**\obj\**
              runInParallel: False # This disables multi-threaded test runs
              failOnMinTestsNotRun: True
              minimumExpectedTests: 50
              distributionBatchType: basedOnExecutionTime
              configuration: '$(_BuildConfig)'
              continueOnError: true